#!/usr/bin/env node
const fs = require('fs');
const colors = require('colors');
const inquirer = require('inquirer');
const { exec } = require('child_process');
const headerReg = /^(feat|fix|style):/;
const errOptions = [
  "强制提交",
  "重新输入 msg",
  "给 msg 加上标识前缀",
  "退出"
];

// 获取 commit-msg
let getMsg = function() {
  return new Promise((resolve, reject) => {
    let msgFile = process.argv[2];
    fs.readFile(msgFile, 'utf8', (err, data) => {
      if (err) reject(err);
      else resolve(data.replace(/[\r\n]/g,""));
    })
  })
}

// 输入 msg
let inputMsg = async function() {
  let inputPrompt = {
    type: 'input',
    message: '重新输入 msg: ',
    name: 'msg',
  };
  return inquirer.prompt(inputPrompt).then(answers => answers.msg.replace(/[\r\n]/g,""));
}

// 校验 commit-msg
let testMsg = async function(msg) {
  let res = 0;
  if (headerReg.test(msg)) {
    console.log(colors.green(`Success: msg-"${msg}"  校验通过 `));
  } else {
    let errPrompt = {
      type: 'list',
      name: 'choose',
      choices: errOptions,
      message: colors.red(`Error: msg-"${msg}" 不符合规范，msg 必须以 ( feat | fix | style ) 开头，请选择以下操作以继续: `)
    };
    await inquirer.prompt(errPrompt).then( async (answer) => {
      let index = errOptions.indexOf(answer.choose);
      switch(index) {
        case 0:
          res = 0;
          console.log("[强制提交]");
          break;
        case 1:
          let msg = await inputMsg();
          res = await testMsg(msg);
          console.log("[重新输入]");
          break;
        case 2:
          res = 1;
          console.log("[加上前缀]");
          break;
        case 3:
          res = 1;
          console.log("[在 msg 前加前缀]");
          break;
        default:
          res = 1;
          console.log("退出");
          break;
      }

    })
  }
  return res;
}
async function main () {
  let msg = await getMsg();
  let res = await testMsg(msg);
  console.log("最后的状态码是：", res);
  process.exit(res);
}

try {
  main();
} catch (error) {
  process.exit(1);
}








